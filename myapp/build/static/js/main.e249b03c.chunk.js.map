{"version":3,"sources":["cinemaSystem/DALs/ApiDAL.js","cinemaSystem/utils/utils.js","cinemaSystem/utils/usersDataUtils.js","cinemaSystem/Components/EnterSystemPhase/Login.js","cinemaSystem/Components/EnterSystemPhase/CreateAccount.js","cinemaSystem/utils/premissionsUtils.js","cinemaSystem/Components/UsersManagementPhase/UserCardComp.js","cinemaSystem/Components/UsersManagementPhase/AllUsersComp.js","cinemaSystem/Components/UsersManagementPhase/AddUserComp.js","cinemaSystem/Components/UsersManagementPhase/EditUserComp.js","cinemaSystem/Components/UsersManagementPhase/UsersComp.js","cinemaSystem/MoviesUtils/MoviesUtils.js","cinemaSystem/Components/MoviesPhase/AddMovieComp.js","cinemaSystem/Components/MoviesPhase/MoviesContext.js","cinemaSystem/SubscriptionsUtils/SubscriptionsUtils.js","cinemaSystem/MembersUtils/MembersUtils.js","cinemaSystem/Components/MoviesPhase/MovieCardComp.js","cinemaSystem/Components/MoviesPhase/SearchComp.js","cinemaSystem/Components/MoviesPhase/AllMoviesComp.js","cinemaSystem/Components/MoviesPhase/EditMovieComp.js","cinemaSystem/Components/MoviesPhase/MoviesComp.js","cinemaSystem/Components/SubscriptionsPhase/SubscriptionsContext.js","cinemaSystem/Components/SubscriptionsPhase/AddNewMovieToSubscriptionComp.js","cinemaSystem/Components/SubscriptionsPhase/SubscribeToNewMovieComp.js","cinemaSystem/Components/SubscriptionsPhase/SubscriptionCardComp.js","cinemaSystem/Components/SubscriptionsPhase/AllSubscriptionsComp.js","cinemaSystem/Components/SubscriptionsPhase/AddSubscriptionComp.js","cinemaSystem/Components/SubscriptionsPhase/EditSubscriptionComp.js","cinemaSystem/Components/SubscriptionsPhase/SubscriptionsRouteComp.js","cinemaSystem/Components/MainPhase/MainPage.js","cinemaSystem/Components/EnterSystemPhase/PlaceHolder.js","App.js","reportWebVitals.js","index.js"],"names":["url","axios","get","id","obj","put","post","delete","usersLoginURL","permissionsURL","getPermissionsById","a","ApiDAL","permissionsJson","permissions","data","permissionsById","filter","perm","getUserNameById","usersLogin","usersLoginData","userLoginById","user","_id","getShapedUsers","usersData","usersDBData","perms","shapedUsers","map","i","firstName","lastName","userName","createdDate","sessionTimeOut","premissions","updateShapedUsers","updatedUser","getShapedUserById","shapedUser","userData","getUserLoginData","updateUserLoginData","addUserLogin","deleteUser","getUserLoginDataById","usersDataURL","LoginComp","props","useState","setUserName","password","setPassword","users","setUsers","useEffect","utils","console","log","sessionStorage","loginUser","setItem","usersDataUtils","history","push","alert","style","borderBottom","width","type","placeholder","onChange","e","target","value","onClick","color","textDecorationColor","textDecorationThickness","existUsers","CreateAccountComp","getItem","setAcc","userToUpdate","PermissionsURL","UserCardComp","permissionsToRender","useHistory","deleteUserCard","toString","border","AllUserComp","setUsersData","usersWithoutAdmin","splice","usersCardsToRender","allusers","findIndex","editUserCard","AddUserComp","setPermissions","setFirstName","setLastName","setSessionTimeOut","saveUser","preventDefault","userLoginToAdd","newUser","userDataId","date","Date","toLocaleDateString","userDataToAdd","permissionsToAdd","premissionsUtils","addPermissions","checked","userPermissions","name","includes","updatedPermissions","createSubsIndex","updateSubsIndex","deleteSubsIndex","createMoviesIndex","updateMovIndex","deleteMovIndex","onSubmit","EditUserComp","userId","match","params","userLoginData","setUserLoginData","setUser","firstNameUser","lastNameUser","editPermissions","handleSubmit","permissionsToUpdate","removeItem","UsersComp","allYellowed","addYellowed","location","pathname","backgroundColor","path","component","AllUsersComp","MoviesURL","getMoviesAllData","getMovieById","addNewMovie","movieToAdd","updateMovie","movieToUpdate","deleteMovie","AddMovieComp","setName","genres","setGenres","imageUrl","setImageUrl","premiered","setPremiered","addMovie","image","MoviesUtils","split","MoviesContext","createContext","MoviesContextProvider","moviesData","setMoviesData","Provider","children","SubscriptionsURL","MembersURL","editButton","deleteButton","movie","setMovie","setSubscriptions","JSON","parse","membersWatchedMovies","setMembersWatchedMovies","membersWatched","SubscriptionsUtils","subscriptionsFromDB","undefined","forEach","sub","movies","length","movieData","movieId","MembersUtils","memberId","memberById","watchedDate","movieById","genresToRender","membersWathcedToRender","stringify","deleteMovieCard","member","to","getFullYear","src","position","bottom","left","SearchComp","movieName","setMovieName","toLowerCase","searchedMovies","updateMovies","AllMoviesComp","movieCardToRender","useContext","searchMovies","setSearchMovies","setMovies","allSubscriptionsData","allMoviesData","tenMovies","allMovies","EditMovieComp","nowDate","MoviesComp","MovieCardComp","exact","SubscriptionsContext","SubscriptionsContextProvider","Subscriptions","AddMovieToSubscriptionComp","dateWatched","setDateWatched","movieSelected","setMovieSelected","moviesNotWatched","setMoviesNotWatched","moviesNotWatchedData","moviesWatched","mov","subscribeMovieToMember","updatedMoviesWatched","subById","subscriptions","subToUpdate","movieSelectedIndex","updateMoviesWathced","movieOptions","SubscribeToNewMovieComp","setAllMovies","allSubscriptions","setAllSubscriptions","moviesMemberWatched","setMoviesMemberWatched","subscribeToMovieClicked","setSubscribeToMovieClicked","filteredSubs","newMovies","index","addMovieToSubscription","watchedMoviesListToRender","SubscriptionCardComp","subscribeToNewMovie","setMember","subscriptionsDB","subscriptionById","deleteMember","email","city","AllSubscriptionsComp","members","setMembers","membersFromDB","subscriptionsToRender","membersThatSubscriptions","allMembers","AddSubscriptionsComp","memberName","setMemberName","memberEmail","setMemberEmail","memberCity","setMemberCity","saveMember","memberToSave","newMember","memberDataId","subscriptionToAdd","EditSubscriptionsComp","memberMail","setMemberMail","updateMember","memberToUpdate","SubscriptionsRouteComp","MainComp","session","setSession","setPremissions","isAdmin","setIsAdmin","moviesClicked","setMoviesClicked","subscriptionsClicked","setSubscriptionsClicked","usersManClicked","setUsersManClicked","sessionTime","logOutTimer","setTimeout","movYellowed","SubsYellowed","usersManYellowed","usersManagementButton","prem","clearTimeout","SubscriptionsComp","PlaceHolderComp","CreateAcc","App","className","PlaceHolder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e249b03c.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst getAllData = (url) => {\r\n    return axios.get(url)\r\n}\r\nconst getById = (url) => {\r\n    return axios.get(url)\r\n}\r\nconst updateData = (url, id, obj) => {\r\n    return axios.put(`${url}/${id}`, obj)\r\n}\r\nconst addData = (url, obj) => {\r\n    return axios.post(url, obj)\r\n}\r\nconst deleteData = (url, id) => {\r\n    return axios.delete(`${url}/${id}`)\r\n}\r\n\r\nexport default { getAllData, updateData, addData, deleteData, getById }","import ApiDAL from \"../DALs/ApiDAL\"\r\nconst usersLoginURL = 'https://mern-cinema-cinemawebserver.herokuapp.com/api/users'\r\nconst usersDataURL = 'https://mern-cinema-cinemawebserver.herokuapp.com/api/file/users'\r\nconst permissionsURL = 'https://mern-cinema-cinemawebserver.herokuapp.com/api/premissions'\r\nconst getUserLoginData = () => {\r\n    return ApiDAL.getAllData(usersLoginURL);\r\n}\r\nconst getUserLoginDataById = (id) => {\r\n    return ApiDAL.getById(`https://mern-cinema-cinemawebserver.herokuapp.com/api/users/${id}`)\r\n}\r\nconst updateUserLoginData = (id, obj) => {\r\n    return ApiDAL.updateData(usersLoginURL, id, obj)\r\n}\r\nconst addUserLogin = (obj) => {\r\n    return ApiDAL.addData(usersLoginURL, obj)\r\n}\r\nconst deleteUser = (url, id) => {\r\n    return ApiDAL.deleteData(url, id)\r\n}\r\nconst getPermissionsById = async (id) => {\r\n    let permissionsJson = await ApiDAL.getAllData(permissionsURL);\r\n    let permissions = permissionsJson.data\r\n    let permissionsById = permissions.filter(perm => perm.id == id)\r\n    return permissionsById\r\n}\r\nconst getUserNameById = async (id) => {\r\n    let usersLogin = await ApiDAL.getAllData(usersLoginURL);\r\n    let usersLoginData = usersLogin.data\r\n    let userLoginById = usersLoginData.filter(user => user._id == id)\r\n    return userLoginById\r\n}\r\nconst getShapedUsers = async () => {\r\n    let usersData = await ApiDAL.getAllData(usersDataURL);\r\n    let usersDBData = await ApiDAL.getAllData(usersLoginURL);\r\n    let perms = await ApiDAL.getAllData(permissionsURL)\r\n    let shapedUsers = usersData.data.map((user, i) => {\r\n        return {\r\n            id: user.id,\r\n            firstName: user.firstName,\r\n            lastName: user.lastName,\r\n            userName: usersDBData.data[i].userName,\r\n            createdDate: user.createdDate,\r\n            sessionTimeOut: user.sessionTimeOut,\r\n            permissions: perms.data[i].premissions\r\n        }\r\n    })\r\n\r\n    return shapedUsers\r\n}\r\nconst updateShapedUsers = async (id, updatedUser) => {\r\n    let shapedUser = await getShapedUserById(id);\r\n    shapedUser = updatedUser;\r\n    return shapedUser\r\n\r\n\r\n\r\n}\r\nconst getShapedUserById = async (id) => {\r\n    let userData = await (await ApiDAL.getById(`https://mern-cinema-cinemawebserver.herokuapp.com/api/file/users/${id}`)).data[0]\r\n    let shapedUser = {\r\n        firstName: userData.firstName,\r\n        lastName: userData.lastName,\r\n        userName: '',\r\n        createdDate: userData.createdDate,\r\n        sessionTimeOut: userData.sessionTimeOut,\r\n        permissions: []\r\n    }\r\n    let permissions = await getPermissionsById(id)\r\n    let userName = await getUserNameById(id)\r\n    shapedUser.userName = userName[0].userName;\r\n    shapedUser.permissions = permissions[0].premissions;\r\n    return shapedUser;\r\n}\r\n\r\nexport default { getUserLoginData, updateUserLoginData, addUserLogin, getShapedUsers, deleteUser, getShapedUserById, getUserLoginDataById, updateShapedUsers }","import ApiDAL from \"../DALs/ApiDAL\";\r\nconst usersDataURL = 'https://mern-cinema-cinemawebserver.herokuapp.com/api/file/users'\r\nconst getUsersData = () => {\r\n    return ApiDAL.getAllData(usersDataURL);\r\n}\r\nconst addUser = (obj) => {\r\n    return ApiDAL.addData(usersDataURL, obj)\r\n}\r\nconst getUserById = (id) => {\r\n    return ApiDAL.getById(`https://mern-cinema-cinemawebserver.herokuapp.com/api/file/users/${id}`)\r\n}\r\nconst updateUser = (id, obj) => {\r\n    return ApiDAL.updateData(usersDataURL, id, obj)\r\n}\r\n\r\nexport default { getUsersData, addUser, getUserById, updateUser }","import react, { useEffect, useState } from 'react'\r\nimport utils from '../../utils/utils';\r\nimport { Link } from 'react-router-dom';\r\nimport usersDataUtils from '../../utils/usersDataUtils';\r\n\r\nconst LoginComp = (props) => {\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [users, setUsers] = useState([]);\r\n    const [isExist, setIsExist] = useState(false);\r\n    useEffect(async () => {\r\n        let usersLoginData = await utils.getUserLoginData();\r\n        setUsers(usersLoginData.data);\r\n        console.log(usersLoginData.data);\r\n    }, [])\r\n    const createAcc = () => {\r\n        let existUsers = users.filter(user => user.userName == userName);\r\n        console.log(existUsers);\r\n        if (existUsers[0] != null) {\r\n            sessionStorage.setItem('userName', userName)\r\n            props.history.push(`/createAcc/`)\r\n        } else if (userName != '') {\r\n            alert(\"Your User Name Is Not In The System --->Please Talk With The Admin\")\r\n        } else if (userName == '') {\r\n            alert(\"There Is No User Name ---> Please Enter Your User Name Given From The Admin\")\r\n        }\r\n    }\r\n    console.log(sessionStorage);\r\n\r\n    const loginUser = async () => {\r\n        console.log(users);\r\n        let existedUsers = users.filter(user => user.userName == userName && user.password == password && user.password != '');\r\n        if (existedUsers[0] != null) {\r\n            sessionStorage.setItem(\"userName\", userName)\r\n            let user = users.filter(user => user.userName == userName)\r\n            sessionStorage.setItem(\"userId\", user[0]._id)\r\n            let userData = await usersDataUtils.getUserById(user[0]._id)\r\n            console.log(userData.data[0].sessionTimeOut * 60000);\r\n            sessionStorage.setItem(\"sessionTimeOut\", userData.data[0].sessionTimeOut)\r\n            props.history.push(`/main`)\r\n        } else {\r\n            alert(\"You Are Not A User ---> Please Talk With The Admin\")\r\n        }\r\n        console.log(users);\r\n    }\r\n\r\n    return (\r\n        <div style={{}}>\r\n            <h2 style={{ borderBottom: \"2px solid white\", width: \"335px\" }}>Login To Your Cinema System</h2> <br />\r\n            User Name : <input type=\"text\" placeholder=\"Enter Your User Name\" onChange={e => setUserName(e.target.value)} /><br />\r\n            Password : <input type=\"password\" placeholder=\"Enter Your Password\" onChange={e => setPassword(e.target.value)} /><br />\r\n            <input type=\"button\" value=\"Login\" onClick={loginUser} /> <br />\r\n            New User ? : <Link style={{ color: \"unset\", textDecorationColor: \"#3EDBF0\", textDecorationThickness: \"3px\" }} onClick={createAcc}> Create Account</Link>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default LoginComp","import React from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport utils from '../../utils/utils'\r\n\r\n\r\nconst CreateAccountComp = (props) => {\r\n\r\n    const [userName, setUserName] = useState(sessionStorage.getItem('userName'));\r\n    const [password, setPassword] = useState('');\r\n\r\n    const setAcc = async () => {\r\n        let users = await utils.getUserLoginData();\r\n        let usersData = users.data;\r\n        console.log(usersData);\r\n        let userData = usersData.filter(user => user.userName == userName)\r\n        console.log(userData[0]);\r\n        let id = userData[0]._id;\r\n        let userToUpdate = {\r\n            userName: userName,\r\n            password: password\r\n        }\r\n        await utils.updateUserLoginData(id, userToUpdate);\r\n        alert(\"User Created\")\r\n        console.log(users.data);\r\n        props.history.push('/')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Create An Account</h2>\r\n            User name : <input type=\"text\" value={userName} onChange={e => setUserName(e.target.value)} /><br />\r\n            Password : <input type=\"text\" placeholder=\"Enter Password\" onChange={e => setPassword(e.target.value)} /><br />\r\n            <input type=\"button\" value=\"Create\" onClick={setAcc} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateAccountComp","import ApiDAL from \"../DALs/ApiDAL\";\r\nconst PermissionsURL = 'https://mern-cinema-cinemawebserver.herokuapp.com/api/premissions'\r\nconst getAllPremissions = () => {\r\n    return ApiDAL.getAllData(PermissionsURL)\r\n}\r\nconst updatePermissions = (id, obj) => {\r\n    return ApiDAL.updateData(PermissionsURL, id, obj)\r\n}\r\nconst addPermissions = (obj) => {\r\n    return ApiDAL.addData(PermissionsURL, obj)\r\n}\r\nexport default { getAllPremissions, updatePermissions, addPermissions }\r\n","import react, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport utils from \"../../utils/utils\";\r\nconst UserCardComp = (props) => {\r\n    let history = useHistory()\r\n    const [user, setUser] = useState(props.user)\r\n    const deleteUser = async () => {\r\n        utils.deleteUser('https://mern-cinema-cinemawebserver.herokuapp.com/api/users', user.id)\r\n        utils.deleteUser('https://mern-cinema-cinemawebserver.herokuapp.com/api/file/users', user.id)\r\n        utils.deleteUser('https://mern-cinema-cinemawebserver.herokuapp.com/api/premissions', user.id)\r\n        props.deleteUserCard(user)\r\n        history.push(\"/main/users/all\")\r\n    }\r\n    const editUser = () => {\r\n        sessionStorage.setItem('firstName', user.firstName)\r\n        sessionStorage.setItem(\"lastName\", user.lastName)\r\n        history.push(`/main/users/editUser/${user.id}`)\r\n    }\r\n    let permissionsToRender\r\n    if (props.user.permissions) {\r\n        permissionsToRender = user.permissions.toString()\r\n    }\r\n    return (\r\n        <div style={{ border: \"3px solid black\", width: \"500px\" }}>\r\n            Name : {user.firstName} {user.lastName}<br />\r\n            User Name : {user.userName}<br />\r\n            Session Time Out(Minutes) : {user.sessionTimeOut}  <br />\r\n            Created Date : {user.createdDate}<br />\r\n            Permissions :{permissionsToRender} <br />\r\n            <input type=\"button\" value=\"Edit\" onClick={editUser} /> <input type=\"button\" value=\"Delete\" onClick={deleteUser} />\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default UserCardComp","import react, { useEffect, useState } from 'react'\r\nimport utils from '../../utils/utils';\r\nimport UserCardComp from './UserCardComp';\r\nconst AllUserComp = (props) => {\r\n    const [usersData, setUsersData] = useState([]);\r\n\r\n\r\n    useEffect(async () => {\r\n        let shapedUsers = await utils.getShapedUsers()\r\n        setUsersData(shapedUsers)\r\n    }, [])\r\n\r\n    let usersWithoutAdmin = [...usersData];\r\n    usersWithoutAdmin.splice(0, 1);\r\n    let usersCardsToRender = usersWithoutAdmin.map(user => {\r\n        return <UserCardComp key={user.id} user={user} deleteUserCard={(data) => {\r\n            let allusers = usersData;\r\n            let i = allusers.findIndex(user => user.id == data.id);\r\n            allusers.splice(i, 1);\r\n            setUsersData(allusers)\r\n        }} editUserCard={data => {\r\n            let allusers = usersData;\r\n            let i = allusers.findIndex(user => user.id == data.id)\r\n            allusers[i] = data\r\n            setUsersData(allusers)\r\n        }} />\r\n    })\r\n    return (\r\n        <div>\r\n            <h3>All Users :</h3>\r\n            {usersCardsToRender}\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllUserComp","import react, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport premissionsUtils from '../../utils/premissionsUtils'\r\nimport usersDataUtils from '../../utils/usersDataUtils'\r\nimport utils from '../../utils/utils'\r\n\r\n\r\nconst AddUserComp = () => {\r\n    const history = useHistory()\r\n    const [permissions, setPermissions] = useState([])\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [userName, setUserName] = useState('')\r\n    const [sessionTimeOut, setSessionTimeOut] = useState(0)\r\n\r\n    useEffect(async () => {\r\n        let allUsersLoginData = await (await utils.getUserLoginData()).data\r\n    }, [])\r\n\r\n\r\n    const saveUser = async (e) => {\r\n        e.preventDefault()\r\n        let userLoginToAdd = {\r\n            userName: userName,\r\n            password: ''\r\n        }\r\n        let newUser = await utils.addUserLogin(userLoginToAdd);\r\n        const userDataId = newUser.data._id\r\n        console.log(userDataId);\r\n        let date = new Date();\r\n        let createdDate = date.toLocaleDateString(\"en-TT\")\r\n        let userDataToAdd = {\r\n            id: userDataId,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            createdDate: createdDate,\r\n            sessionTimeOut: sessionTimeOut\r\n        }\r\n        await usersDataUtils.addUser(userDataToAdd);\r\n        let permissionsToAdd = {\r\n            id: userDataId,\r\n            premissions: permissions\r\n        }\r\n        await premissionsUtils.addPermissions(permissionsToAdd)\r\n        history.push('/main/users/all')\r\n    }\r\n\r\n\r\n\r\n\r\n    const addPermissions = (e) => {\r\n        if (e.target.checked) {\r\n            let userPermissions = [...permissions];\r\n            userPermissions = [...userPermissions, e.target.name]\r\n            if ((e.target.name == \"Create Subscriptions\" || e.target.name == \"Update Subscriptions\" || e.target.name == \"Delete Subscriptions\") && (userPermissions.includes(\"View Subscriptions\") == false)) {\r\n                userPermissions = [...userPermissions, \"View Subscriptions\"]\r\n            }\r\n            if ((e.target.name == \"Create Movies\" || e.target.name == \"Update Movies\" || e.target.name == \"Delete Movies\") && (userPermissions.includes(\"View Movies\") == false)) {\r\n                userPermissions = [...userPermissions, \"View Movies\"]\r\n            }\r\n            setPermissions(userPermissions)\r\n        } else {\r\n            let updatedPermissions = [...permissions];\r\n            let i = updatedPermissions.findIndex(perm => perm === e.target.name)\r\n            updatedPermissions.splice(i, 1)\r\n            if (e.target.name == \"View Subscriptions\") {\r\n                if (updatedPermissions.includes(\"Create Subscriptions\")) {\r\n                    let createSubsIndex = updatedPermissions.findIndex(perm => perm == \"Create Subscriptions\")\r\n                    updatedPermissions.splice(createSubsIndex, 1)\r\n                }\r\n                if (updatedPermissions.includes(\"Update Subscriptions\")) {\r\n                    let updateSubsIndex = updatedPermissions.findIndex(perm => perm == \"Update Subscriptions\");\r\n                    updatedPermissions.splice(updateSubsIndex, 1)\r\n                }\r\n                if (updatedPermissions.includes(\"Delete Subscriptions\")) {\r\n                    let deleteSubsIndex = updatedPermissions.findIndex(perm => perm == \"Delete Subscriptions\");\r\n                    updatedPermissions.splice(deleteSubsIndex, 1)\r\n                }\r\n            }\r\n            if (e.target.name == \"View Movies\") {\r\n                if (updatedPermissions.includes(\"Create Movies\")) {\r\n                    let createMoviesIndex = updatedPermissions.findIndex(perm => perm == \"Create Movies\");\r\n                    updatedPermissions.splice(createMoviesIndex, 1);\r\n                }\r\n                if (updatedPermissions.includes(\"Update Movies\")) {\r\n                    let updateMovIndex = updatedPermissions.findIndex(perm => perm == \"Update Movies\");\r\n                    updatedPermissions.splice(updateMovIndex, 1);\r\n                }\r\n                if (updatedPermissions.includes(\"Delete Movies\")) {\r\n                    let deleteMovIndex = updatedPermissions.findIndex(perm => perm == \"Delete Movies\");\r\n                    updatedPermissions.splice(deleteMovIndex, 1)\r\n                }\r\n            }\r\n            setPermissions(updatedPermissions)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={saveUser}>\r\n                <h3>Add New User </h3>\r\n                First Name :<input type=\"text\" onChange={e => { setFirstName(e.target.value) }} /> <br />\r\n                Last Name : <input type=\"text\" onChange={e => { setLastName(e.target.value) }} /> <br />\r\n                User Name : <input type=\"text\" onChange={e => { setUserName(e.target.value) }} /> <br />\r\n                Session Time Out(Minutes) : <input type=\"number\" onChange={e => { setSessionTimeOut(e.target.value) }} /> <br />\r\n                Permissions : <br />\r\n                <input type=\"checkBox\" name=\"View Subscriptions\" checked={permissions.includes(\"View Subscriptions\")} onChange={addPermissions} />View Subscriptions <br />\r\n                <input type=\"checkBox\" name=\"Create Subscriptions\" checked={permissions.includes(\"Create Subscriptions\")} onChange={addPermissions} />Create Subscriptions <br />\r\n                <input type=\"checkBox\" name=\"Update Subscriptions\" checked={permissions.includes(\"Update Subscriptions\")} onChange={addPermissions} />Update Subscriptions <br />\r\n                <input type=\"checkBox\" name=\"Delete Subscriptions\" checked={permissions.includes(\"Delete Subscriptions\")} onChange={addPermissions} />Delete Subscriptions <br />\r\n                <input type=\"checkBox\" name=\"View Movies\" checked={permissions.includes(\"View Movies\")} onChange={addPermissions} />View Movies <br />\r\n                <input type=\"checkBox\" name=\"Create Movies\" checked={permissions.includes(\"Create Movies\")} onChange={addPermissions} />Create Movies <br />\r\n                <input type=\"checkBox\" name=\"Update Movies\" checked={permissions.includes(\"Update Movies\")} onChange={addPermissions} />Update Movies<br />\r\n                <input type=\"checkBox\" name=\"Delete Movies\" checked={permissions.includes(\"Delete Movies\")} onChange={addPermissions} />Delete Movies <br /><br />\r\n                <input type=\"submit\" value=\"Save\" />\r\n                <input type=\"button\" value=\"Cancel\" onClick={() => { history.push('/main/users/all') }} />\r\n            </form>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUserComp","import react, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport premissionsUtils from '../../utils/premissionsUtils';\r\nimport usersDataUtils from '../../utils/usersDataUtils';\r\nimport utils from '../../utils/utils';\r\n\r\n\r\nconst EditUserComp = (props) => {\r\n    const userId = props.match.params.id\r\n    const history = useHistory()\r\n    const [userLoginData, setUserLoginData] = useState({})\r\n    const [permissions, setPermissions] = useState([])\r\n    const [user, setUser] = useState({})\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [firstNameUser, setFirstNameUser] = useState(sessionStorage.getItem(\"firstName\"));\r\n    const [lastNameUser, setLastNameUser] = useState(sessionStorage.getItem(\"lastName\"));\r\n    const [userName, setUserName] = useState('');\r\n    const [sessionTimeOut, setSessionTimeOut] = useState(0);\r\n\r\n    useEffect(async () => {\r\n        let user = await utils.getShapedUserById(userId);\r\n        let userLoginData = await utils.getUserLoginDataById(userId)\r\n        setUserLoginData(userLoginData.data)\r\n        setUser(user)\r\n        let permissions = user.permissions\r\n        setPermissions(permissions)\r\n\r\n    }, [])\r\n    const editPermissions = (e) => {\r\n        if (e.target.checked) {\r\n            let userPermissions = [...permissions];\r\n            userPermissions = [...userPermissions, e.target.name]\r\n            if ((e.target.name == \"Create Subscriptions\" || e.target.name == \"Update Subscriptions\" || e.target.name == \"Delete Subscriptions\") && (userPermissions.includes(\"View Subscriptions\") == false)) {\r\n                userPermissions = [...userPermissions, \"View Subscriptions\"]\r\n            }\r\n            if ((e.target.name == \"Create Movies\" || e.target.name == \"Update Movies\" || e.target.name == \"Delete Movies\") && (userPermissions.includes(\"View Movies\") == false)) {\r\n                userPermissions = [...userPermissions, \"View Movies\"]\r\n            }\r\n            setPermissions(userPermissions)\r\n        } else {\r\n            let updatedPermissions = [...permissions];\r\n            let i = updatedPermissions.findIndex(perm => perm === e.target.name)\r\n            updatedPermissions.splice(i, 1)\r\n            if (e.target.name == \"View Subscriptions\") {\r\n                if (updatedPermissions.includes(\"Create Subscriptions\")) {\r\n                    let createSubsIndex = updatedPermissions.findIndex(perm => perm == \"Create Subscriptions\")\r\n                    updatedPermissions.splice(createSubsIndex, 1)\r\n                }\r\n                if (updatedPermissions.includes(\"Update Subscriptions\")) {\r\n                    let updateSubsIndex = updatedPermissions.findIndex(perm => perm == \"Update Subscriptions\");\r\n                    updatedPermissions.splice(updateSubsIndex, 1)\r\n                }\r\n                if (updatedPermissions.includes(\"Delete Subscriptions\")) {\r\n                    let deleteSubsIndex = updatedPermissions.findIndex(perm => perm == \"Delete Subscriptions\");\r\n                    updatedPermissions.splice(deleteSubsIndex, 1)\r\n                }\r\n            }\r\n            if (e.target.name == \"View Movies\") {\r\n                if (updatedPermissions.includes(\"Create Movies\")) {\r\n                    let createMoviesIndex = updatedPermissions.findIndex(perm => perm == \"Create Movies\");\r\n                    updatedPermissions.splice(createMoviesIndex, 1);\r\n                }\r\n                if (updatedPermissions.includes(\"Update Movies\")) {\r\n                    let updateMovIndex = updatedPermissions.findIndex(perm => perm == \"Update Movies\");\r\n                    updatedPermissions.splice(updateMovIndex, 1);\r\n                }\r\n                if (updatedPermissions.includes(\"Delete Movies\")) {\r\n                    let deleteMovIndex = updatedPermissions.findIndex(perm => perm == \"Delete Movies\");\r\n                    updatedPermissions.splice(deleteMovIndex, 1)\r\n                }\r\n            }\r\n            setPermissions(updatedPermissions)\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        let permissionsToUpdate = {\r\n            id: userId,\r\n            premissions: permissions\r\n        }\r\n        await premissionsUtils.updatePermissions(userId, permissionsToUpdate)\r\n        await utils.updateUserLoginData(userId, userLoginData)\r\n        let updatedUser = {\r\n            id: userId,\r\n            firstName: user.firstName,\r\n            lastName: user.lastName,\r\n            createdDate: user.createdDate,\r\n            sessionTimeOut: user.sessionTimeOut\r\n        }\r\n        await usersDataUtils.updateUser(userId, updatedUser)\r\n        sessionStorage.removeItem(\"firstName\")\r\n        sessionStorage.removeItem(\"lastName\")\r\n        history.push(\"/main/users/all\")\r\n\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <h3>Edit User :{firstNameUser} {lastNameUser}</h3>\r\n            First Name :<input type=\"text\" value={user.firstName} onChange={e => {\r\n                setFirstName(e.target.value)\r\n                user.firstName = e.target.value\r\n            }} /><br />\r\n            Last Name : <input type=\"text\" value={user.lastName} onChange={e => {\r\n                setLastName(e.target.value)\r\n                user.lastName = e.target.value\r\n            }} /><br />\r\n            User Name : <input type=\"text\" value={user.userName} onChange={e => {\r\n                setUserName(e.target.value)\r\n                user.userName = e.target.value\r\n                userLoginData.userName = e.target.value\r\n            }} /><br />\r\n            Session Time Out(Minutes) : <input type=\"number\" value={user.sessionTimeOut} onChange={e => {\r\n                setSessionTimeOut(e.target.value)\r\n                user.sessionTimeOut = e.target.value\r\n            }} /><br />\r\n            Created Date : {user.createdDate} <br />\r\n            Permissions :<br />\r\n            <input type=\"checkBox\" name=\"View Subscriptions\" checked={permissions.includes(\"View Subscriptions\")} onChange={editPermissions} />View Subscriptions <br />\r\n            <input type=\"checkBox\" name=\"Create Subscriptions\" checked={permissions.includes(\"Create Subscriptions\")} onChange={editPermissions} />Create Subscriptions <br />\r\n            <input type=\"checkBox\" name=\"Update Subscriptions\" checked={permissions.includes(\"Update Subscriptions\")} onChange={editPermissions} />Update Subscriptions <br />\r\n            <input type=\"checkBox\" name=\"Delete Subscriptions\" checked={permissions.includes(\"Delete Subscriptions\")} onChange={editPermissions} />Delete Subscriptions <br />\r\n            <input type=\"checkBox\" name=\"View Movies\" checked={permissions.includes(\"View Movies\")} onChange={editPermissions} />View Movies <br />\r\n            <input type=\"checkBox\" name=\"Create Movies\" checked={permissions.includes(\"Create Movies\")} onChange={editPermissions} />Create Movies <br />\r\n            <input type=\"checkBox\" name=\"Update Movies\" checked={permissions.includes(\"Update Movies\")} onChange={editPermissions} />Update Movies<br />\r\n            <input type=\"checkBox\" name=\"Delete Movies\" checked={permissions.includes(\"Delete Movies\")} onChange={editPermissions} />Delete Movies <br /><br />\r\n\r\n            <input type=\"button\" value=\"Update\" onClick={handleSubmit} /><input type=\"button\" value=\"Cancel\" onClick={() => { history.push('/main/users/all') }} />\r\n            <br />\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default EditUserComp","import react, { useEffect, useState } from 'react'\r\nimport { Switch, Route, useHistory } from 'react-router-dom'\r\nimport AllUsersComp from './AllUsersComp'\r\nimport AddUserComp from './AddUserComp'\r\nimport EditUserComp from './EditUserComp'\r\nconst UsersComp = (props) => {\r\n    const history = useHistory()\r\n    let allYellowed;\r\n    let addYellowed\r\n    if (history.location.pathname == \"/main/users/all\") {\r\n        allYellowed = \"#3EDBF0\"\r\n        addYellowed = null\r\n    } else if (history.location.pathname == \"/main/users/add\") {\r\n        allYellowed = null;\r\n        addYellowed = \"#3EDBF0\"\r\n    }\r\n    return (\r\n        <div style={{ border: \"3px solid black\", width: \"750px\" }}>\r\n            <h3>Users</h3>\r\n            <input type=\"button\" style={{ backgroundColor: allYellowed }} value=\"All Users\" onClick={() => { props.history.push('/main/users/all') }} />\r\n            <input type=\"button\" style={{ backgroundColor: addYellowed }} value=\"Add User\" onClick={() => { props.history.push(\"/main/users/add\") }} />\r\n            <Switch>\r\n                <Route path=\"/main/users/all\" component={AllUsersComp} />\r\n                <Route path=\"/main/users/add\" component={AddUserComp} />\r\n                <Route path=\"/main/users/editUser/:id\" component={EditUserComp} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\nexport default UsersComp","import ApiDAL from \"../DALs/ApiDAL\";\r\nconst MoviesURL = \"https://mern-cinema-subswebserver.herokuapp.com/api/Movies\"\r\n\r\n\r\nconst getMoviesAllData = async () => {\r\n    return ApiDAL.getAllData(MoviesURL)\r\n}\r\nconst getMovieById = (id) => {\r\n    return ApiDAL.getById(`https://mern-cinema-subswebserver.herokuapp.com/api/movies/${id}`)\r\n}\r\nconst addNewMovie = (movieToAdd) => {\r\n    return ApiDAL.addData(MoviesURL, movieToAdd)\r\n}\r\nconst updateMovie = (id, movieToUpdate) => {\r\n    return ApiDAL.updateData(MoviesURL, id, movieToUpdate)\r\n}\r\nconst deleteMovie = (id) => {\r\n    return ApiDAL.deleteData(MoviesURL, id)\r\n}\r\nexport default { getMoviesAllData, getMovieById, addNewMovie, updateMovie, deleteMovie }","import React, { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MoviesUtils from \"../../MoviesUtils/MoviesUtils\";\r\n\r\nconst AddMovieComp = () => {\r\n    const history = useHistory()\r\n    const [name, setName] = useState('');\r\n    const [genres, setGenres] = useState([])\r\n    const [imageUrl, setImageUrl] = useState('')\r\n    const [premiered, setPremiered] = useState('')\r\n\r\n    const addMovie = async () => {\r\n        const movieToAdd = {\r\n            name: name,\r\n            genres: genres,\r\n            image: imageUrl,\r\n            premiered: premiered\r\n        }\r\n        await MoviesUtils.addNewMovie(movieToAdd);\r\n        history.push(\"/main/movies/all\")\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Add Movie : </h3>\r\n            Name : <input type=\"text\" value={name} onChange={e => { setName(e.target.value) }} /><br />\r\n            Genres :<input type=\"text\" value={genres} onChange={(e) => {\r\n                setGenres(e.target.value.split(\",\"))\r\n                console.log([genres]);\r\n            }} /><br />\r\n            image url : <input type=\"text\" value={imageUrl} onChange={e => { setImageUrl(e.target.value) }} /><br />\r\n            Premiered : <input type=\"date\" value={premiered} onChange={e => { setPremiered(e.target.value) }} /><br />\r\n            <input type=\"button\" value=\"Save\" onClick={addMovie} />  <input type=\"button\" value=\"Cancel\" onClick={() => { history.push(\"/main/movies/all\") }} />\r\n        </div>\r\n    )\r\n}\r\nexport default AddMovieComp","import react, { createContext, useState } from 'react';\r\n\r\n// creating context\r\nexport const MoviesContext = createContext()\r\n\r\n\r\n// creating provider component\r\nexport const MoviesContextProvider = (props) => {\r\n    const [moviesData, setMoviesData] = useState([])\r\n\r\n\r\n\r\n    return (\r\n        <MoviesContext.Provider value={[moviesData, setMoviesData]}>\r\n            {props.children}\r\n        </MoviesContext.Provider>\r\n    )\r\n}\r\n","import ApiDAL from \"../DALs/ApiDAL\";\r\nconst SubscriptionsURL = \"https://mern-cinema-subswebserver.herokuapp.com/api/subscriptions\"\r\n\r\nconst getAllSubscriptions = () => {\r\n    return ApiDAL.getAllData(SubscriptionsURL)\r\n}\r\nconst addSubscription = (obj) => {\r\n    return ApiDAL.addData(SubscriptionsURL, obj)\r\n}\r\nconst updateSubscription = (id, obj) => {\r\n    return ApiDAL.updateData(SubscriptionsURL, id, obj)\r\n}\r\nconst deleteSubscription = (id) => {\r\n    return ApiDAL.deleteData(SubscriptionsURL, id)\r\n}\r\nexport default { getAllSubscriptions, addSubscription, updateSubscription, deleteSubscription }","import ApiDAL from \"../DALs/ApiDAL\";\r\nconst MembersURL = \"https://mern-cinema-subswebserver.herokuapp.com/api/members\";\r\n\r\nconst getMembersAllData = () => {\r\n    return ApiDAL.getAllData(MembersURL)\r\n}\r\nconst getMemberById = (id) => {\r\n    return ApiDAL.getById(`https://mern-cinema-subswebserver.herokuapp.com/api/members/${id}`)\r\n}\r\nconst addMember = (obj) => {\r\n    return ApiDAL.addData(MembersURL, obj)\r\n}\r\nconst updateMember = (id, obj) => {\r\n    return ApiDAL.updateData(MembersURL, id, obj)\r\n}\r\nconst deleteMember = (id) => {\r\n    return ApiDAL.deleteData(MembersURL, id)\r\n}\r\nexport default { getMemberById, getMembersAllData, updateMember, deleteMember, addMember }","import react, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport MembersUtils from '../../MembersUtils/MembersUtils';\r\nimport MoviesUtils from '../../MoviesUtils/MoviesUtils';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SubscriptionsUtils from '../../SubscriptionsUtils/SubscriptionsUtils';\r\n\r\n\r\nconst UserCardComp = (props) => {\r\n\r\n    const history = useHistory()\r\n    const [movie, setMovie] = useState({});\r\n    const [subscriptions, setSubscriptions] = useState([])\r\n    const [permissions, setPermissions] = useState(JSON.parse(sessionStorage.getItem(\"permissions\")).premissions)\r\n    const [membersWatchedMovies, setMembersWatchedMovies] = useState([])\r\n    let membersWatched = []\r\n    useEffect(async () => {\r\n        const subscriptionsFromDB = await SubscriptionsUtils.getAllSubscriptions()\r\n        setSubscriptions(subscriptionsFromDB.data)\r\n        if (props.movie != undefined) {\r\n            setMovie(props.movie)\r\n            subscriptionsFromDB.data.forEach(sub => {\r\n                if (sub.movies.length > 0) {\r\n                    sub.movies.forEach(async (movieData) => {\r\n                        console.log(props.movie);\r\n                        console.log(movieData);\r\n                        if (movieData.movieId === props.movie._id) {\r\n                            console.log(\"hi\");\r\n                            let memberById = await MembersUtils.getMemberById(sub.memberId)\r\n                            membersWatched = [...membersWatched, { id: sub.memberId, date: movieData.watchedDate, name: memberById.data.name }]\r\n                            setMembersWatchedMovies(membersWatched)\r\n\r\n                        }\r\n\r\n                    })\r\n                }\r\n            })\r\n        } else if (props.match.params.id) {\r\n            const movieById = await MoviesUtils.getMovieById(props.match.params.id)\r\n            setMovie(movieById.data)\r\n            subscriptionsFromDB.data.forEach(sub => {\r\n                if (sub.movies.length > 0) {\r\n                    sub.movies.forEach(async (movieData) => {\r\n                        console.log(props.movie);\r\n                        console.log(movieData);\r\n                        if (movieData.movieId === movieById.data._id) {\r\n                            console.log(\"hi\");\r\n                            let memberById = await MembersUtils.getMemberById(sub.memberId)\r\n                            membersWatched = [...membersWatched, { id: sub.memberId, date: movieData.watchedDate, name: memberById.data.name }]\r\n                            setMembersWatchedMovies(membersWatched)\r\n\r\n                        }\r\n\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }, [])\r\n\r\n\r\n    let editButton;\r\n    let deleteButton;\r\n    let date = new Date(movie.premiered)\r\n    if (permissions.includes(\"Update Movies\")) {\r\n        editButton = <input type=\"button\" value=\"Edit\" onClick={() => {\r\n            sessionStorage.setItem(\"movie\", JSON.stringify(movie))\r\n            history.push('/main/movies/edit')\r\n        }} />\r\n    }\r\n    if (permissions.includes(\"Delete Movies\")) {\r\n        deleteButton = <input type=\"button\" value=\"Delete\" onClick={async () => {\r\n            await MoviesUtils.deleteMovie(movie._id);\r\n            if (props.movie != undefined) {\r\n                props.deleteMovieCard(movie)\r\n            }\r\n            history.push(\"/main/movies/all\")\r\n        }} />\r\n    }\r\n    let genresToRender;\r\n    if (JSON.stringify(movie) != \"{}\") {\r\n        genresToRender = movie.genres.toString()\r\n\r\n    }\r\n    let membersWathcedToRender;\r\n    if (membersWatchedMovies.length > 0) {\r\n        membersWathcedToRender = membersWatchedMovies.map(member => {\r\n            let date = new Date(member.date)\r\n            return <li key={member.id}><Link style={{ color: \"unset\", textDecorationColor: \"#3EDBF0\", textDecorationThickness: \"3px\" }} to={`/main/subscriptions/all/${member.id}`} > {member.name}</Link> , {date.toLocaleDateString(\"en-TT\")}</li>\r\n        })\r\n    }\r\n    return (\r\n        <div style={{ border: \"3px solid black\", width: \"500px\" }}>\r\n            <b>{movie.name} , {date.getFullYear()}</b><br />\r\n            genres : {genresToRender}\r\n            <div style={{ width: \"100px\" }}>\r\n                <img src={movie.image} width=\"70px\" />\r\n            </div>\r\n            <div style={{ border: \"3px solid black\", position: \"relative\", width: \"300px\", bottom: \"82px\", left: \"90px\" }}  >\r\n                Subscriptions Watched\r\n                <ul>\r\n                    {membersWathcedToRender}\r\n                </ul>\r\n\r\n\r\n            </div>\r\n\r\n            {editButton}{deleteButton}\r\n\r\n        </div >\r\n    )\r\n}\r\nexport default UserCardComp","import react, { useLayoutEffect, useState } from 'react';\r\n\r\nconst SearchComp = (props) => {\r\n\r\n    const [movieName, setMovieName] = useState('')\r\n\r\n\r\n    const searchMovie = () => {\r\n        if (movieName) {\r\n            console.log(props.movies);\r\n            let searchedMovies = props.movies.filter(movie => {\r\n                if (movie.name.toLowerCase().includes(movieName)) {\r\n                    return movie\r\n                }\r\n            })\r\n            console.log(searchedMovies);\r\n            props.updateMovies(searchedMovies)\r\n        } else if (movieName == \"\") {\r\n            props.updateMovies(props.movies)\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            Find Movie : <input type=\"text\" onChange={e => { setMovieName(e.target.value.toLowerCase()) }} /> <input type=\"button\" value=\"Find\" onClick={searchMovie} />\r\n        </div>\r\n    )\r\n}\r\nexport default SearchComp","import react, { useContext, useEffect, useState } from 'react';\r\nimport { MoviesContext } from './MoviesContext';\r\nimport MoviesUtils from '../../MoviesUtils/MoviesUtils';\r\nimport SubscriptionsUtils from '../../SubscriptionsUtils/SubscriptionsUtils';\r\nimport MovieCard from './MovieCardComp'\r\nimport SearchComp from './SearchComp';\r\n\r\n\r\n\r\nconst AllMoviesComp = () => {\r\n    const [moviesData, setMoviesData] = useContext(MoviesContext)\r\n    const [searchMovies, setSearchMovies] = useState([])\r\n    const [movies, setMovies] = useState([])\r\n    const [subscriptions, setSubscriptions] = useState([])\r\n    const [permissions, setPermissions] = useState(JSON.parse(sessionStorage.getItem(\"permissions\")).premissions)\r\n    console.log(permissions);\r\n    console.log(searchMovies);\r\n    useEffect(async () => {\r\n        let allSubscriptionsData = await SubscriptionsUtils.getAllSubscriptions();\r\n        console.log(allSubscriptionsData.data);\r\n        setSubscriptions(allSubscriptionsData.data)\r\n\r\n    }, [])\r\n    useEffect(async () => {\r\n        let allMoviesData = await MoviesUtils.getMoviesAllData()\r\n        console.log(allMoviesData.data);\r\n        let tenMovies = allMoviesData.data\r\n        setMovies(tenMovies)\r\n        setSearchMovies(tenMovies)\r\n\r\n    }, [])\r\n    let movieCardToRender\r\n    if (searchMovies.length > 0) {\r\n        movieCardToRender = searchMovies.map(movie => {\r\n            return <MovieCard key={movie._id} movie={movie} permissions={permissions}\r\n                deleteMovieCard={(data) => {\r\n                    let allMovies = movies;\r\n                    let i = allMovies.findIndex(movie => movie._id == data._id);\r\n                    allMovies.splice(i, 1);\r\n                    setMovies(allMovies)\r\n                }} />\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <SearchComp movies={movies} updateMovies={(data) => { setSearchMovies(data) }} />\r\n            <h3>All Movies</h3>\r\n            {movieCardToRender}\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default AllMoviesComp","import react, { useState } from 'react'\r\nimport { generatePath, useHistory } from 'react-router-dom'\r\nimport MoviesUtils from '../../MoviesUtils/MoviesUtils'\r\n\r\n\r\nconst EditMovieComp = () => {\r\n\r\n    const history = useHistory()\r\n    const [movie, setMovie] = useState(JSON.parse(sessionStorage.getItem(\"movie\")))\r\n    const [name, setName] = useState(movie.name)\r\n    const [genres, setGenres] = useState(movie.genres.toString())\r\n    const [imageUrl, setImageUrl] = useState(movie.image)\r\n    const [premiered, setPremiered] = useState(movie.premiered)\r\n    const updateMovie = async () => {\r\n        let movieToAdd = {\r\n            name: name,\r\n            genres: genres,\r\n            image: imageUrl,\r\n            premiered: premiered\r\n        }\r\n        await MoviesUtils.updateMovie(movie._id, movieToAdd);\r\n        history.push('/main/movies/all')\r\n    }\r\n    let date = new Date(premiered);\r\n    let nowDate = date.toLocaleDateString(\"fr-CA\")\r\n    console.log(premiered);\r\n    return (\r\n        <div>\r\n            <h3>Edit Movie : {movie.name} </h3>\r\n            Name : <input type=\"text\" value={name} onChange={e => { setName(e.target.value) }} /><br />\r\n            Genres :<input type=\"text\" value={genres} onChange={(e) => {\r\n                setGenres(e.target.value.split(\",\"))\r\n                console.log([genres]);\r\n            }} /><br />\r\n            image url : <input type=\"text\" value={imageUrl} onChange={e => { setImageUrl(e.target.value) }} /><br />\r\n            Premiered : <input type=\"date\" value={nowDate} onChange={e => { setPremiered(e.target.value) }} /><br />\r\n            <input type=\"button\" value=\"Update\" onClick={updateMovie} />  <input type=\"button\" value=\"Cancel\" onClick={() => { history.push(\"/main/movies/all\") }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMovieComp","import react, { useState } from 'react'\r\nimport { Switch, Route, useHistory } from 'react-router-dom';\r\nimport AddMovieComp from './AddMovieComp';\r\nimport AllMoviesComp from './AllMoviesComp';\r\nimport EditMovieComp from './EditMovieComp';\r\nimport { MoviesContextProvider } from './MoviesContext';\r\nimport MovieCardComp from './MovieCardComp'\r\n\r\n\r\nconst MoviesComp = () => {\r\n    const [permissions, setPermissions] = useState(JSON.parse(sessionStorage.getItem(\"permissions\")).premissions)\r\n    const history = useHistory()\r\n    console.log(history);\r\n    let allYellowed;\r\n    let addYellowed\r\n    if (history.location.pathname == \"/main/movies/all\") {\r\n        allYellowed = \"#3EDBF0\"\r\n        addYellowed = null\r\n    } else if (history.location.pathname == \"/main/movies/add\") {\r\n        allYellowed = null;\r\n        addYellowed = \"#3EDBF0\"\r\n    }\r\n    return (\r\n        <div style={{ border: \"3px solid black\", width: \"750px\" }}>\r\n            <h3>Movies</h3>\r\n            <input type=\"button\" style={{ backgroundColor: allYellowed }} value=\"All Movies\" onClick={() => {\r\n                if (permissions.includes(\"View Movies\")) { history.push('/main/movies/all') } else {\r\n                    alert(\"You Dont Have The Right Permission\")\r\n                }\r\n            }} />\r\n            <input type=\"button\" style={{ backgroundColor: addYellowed }} value=\"Add Movie\" onClick={() => {\r\n                if (permissions.includes(\"Create Movies\")) { history.push('/main/movies/add') } else {\r\n                    alert(\"You Dont Have The Right Permission\")\r\n                }\r\n            }} />\r\n            <Switch>\r\n                <MoviesContextProvider>\r\n                    <Route path=\"/main/movies/all/:id\" component={MovieCardComp} />\r\n                    <Route exact path=\"/main/movies/all\" component={AllMoviesComp} />\r\n                    <Route path=\"/main/movies/add\" component={AddMovieComp} />\r\n                    <Route path=\"/main/movies/edit\" component={EditMovieComp} />\r\n                </MoviesContextProvider>\r\n            </Switch>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default MoviesComp","import react, { createContext, useState } from 'react';\r\n\r\n// creating context\r\nexport const SubscriptionsContext = createContext()\r\n\r\n\r\n// creating provider component\r\nexport const SubscriptionsContextProvider = (props) => {\r\n    const [Subscriptions, setSubscriptions] = useState([])\r\n\r\n\r\n\r\n    return (\r\n        <SubscriptionsContext.Provider value={[Subscriptions, setSubscriptions]}>\r\n            {props.children}\r\n        </SubscriptionsContext.Provider>\r\n    )\r\n}\r\n","import react, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport MoviesUtils from '../../MoviesUtils/MoviesUtils'\r\nimport SubscriptionsUtils from '../../SubscriptionsUtils/SubscriptionsUtils'\r\n\r\n\r\nconst AddMovieToSubscriptionComp = (props) => {\r\n\r\n    const history = useHistory()\r\n    const [dateWatched, setDateWatched] = useState('')\r\n    const [movieSelected, setMovieSelected] = useState('Select Movie')\r\n    const [moviesNotWatched, setMoviesNotWatched] = useState([])\r\n    useEffect(async () => {\r\n        const allMovies = await MoviesUtils.getMoviesAllData()\r\n        let moviesData = allMovies.data\r\n        let moviesNotWatchedData = []\r\n        moviesData.forEach(movie => {\r\n            let filteredWatchedMovies = props.moviesWatched.filter(mov => movie._id.includes(mov.id))\r\n            if (filteredWatchedMovies.length == 0) {\r\n                moviesNotWatchedData = [...moviesNotWatchedData, movie]\r\n            }\r\n        })\r\n\r\n\r\n        setMoviesNotWatched(moviesNotWatchedData)\r\n\r\n    }, [])\r\n\r\n    const subscribeMovieToMember = async () => {\r\n        if (movieSelected != \"Select Movie\") {\r\n            let movieToAdd = moviesNotWatched.filter(mov => mov.name == movieSelected)\r\n            let movieId = movieToAdd[0]._id;\r\n            let updatedMoviesWatched = [...props.moviesWatched, { id: movieId, movieName: movieToAdd[0].name, date: dateWatched }]\r\n            let subById = props.subscriptions.filter(sub => sub.memberId == props.member._id)\r\n            subById[0].movies = [...subById[0].movies, { movieId: movieId, watchedDate: dateWatched }]\r\n            let subToUpdate = {\r\n                memberId: props.member._id,\r\n                movies: subById[0].movies\r\n            }\r\n            await SubscriptionsUtils.updateSubscription(subById[0]._id, subToUpdate)\r\n            let movieSelectedIndex = moviesNotWatched.findIndex(mov => mov.name == movieSelected)\r\n            moviesNotWatched.splice(movieSelectedIndex, 1)\r\n            setMoviesNotWatched(moviesNotWatched)\r\n            props.updateMoviesWathced(updatedMoviesWatched)\r\n            setMovieSelected(\"Select Movie\")\r\n            history.push(\"/main/subscriptions/all\")\r\n        }\r\n\r\n    }\r\n    let movieOptions = moviesNotWatched.map(mov => {\r\n        return <option key={mov.id}>{mov.name}</option>\r\n    })\r\n    return (\r\n        <div style={{ border: \"4px solid #3EDBF0\", width: \"300px\" }}>\r\n            Add A New Movie <br />\r\n            <select onChange={e => { setMovieSelected(e.target.value) }} value={movieSelected}>\r\n                <option>Select Movie</option>\r\n                {movieOptions}\r\n\r\n            </select>\r\n            <input type=\"date\" onChange={e => setDateWatched(e.target.value)} /><br />\r\n            <input type=\"button\" value=\"Subscribe\" onClick={subscribeMovieToMember} />\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default AddMovieToSubscriptionComp","import react, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MoviesUtils from '../../MoviesUtils/MoviesUtils';\r\nimport { SubscriptionsContext } from './SubscriptionsContext';\r\nimport AddMovieToSubscriptionComp from './AddNewMovieToSubscriptionComp';\r\nimport SubscriptionsUtils from '../../SubscriptionsUtils/SubscriptionsUtils';\r\n\r\nconst SubscribeToNewMovieComp = (props) => {\r\n\r\n    const [allMovies, setAllMovies] = useState([])\r\n    const [allSubscriptions, setAllSubscriptions] = useState([])\r\n    const [moviesMemberWatched, setMoviesMemberWatched] = useState([])\r\n    const [subscribeToMovieClicked, setSubscribeToMovieClicked] = useState(false)\r\n    useEffect(async () => {\r\n        const allSubscriptions = await (await SubscriptionsUtils.getAllSubscriptions()).data\r\n        setAllSubscriptions(allSubscriptions)\r\n        let allMoviesData = await MoviesUtils.getMoviesAllData();\r\n        setAllMovies(allMoviesData.data)\r\n        let filteredSubs = allSubscriptions.filter(sub => sub.memberId == props.member._id)\r\n        if (filteredSubs.length > 0) {\r\n            let newMovies = [];\r\n            filteredSubs[0].movies.forEach(movie => {\r\n                newMovies = [...newMovies, { movieId: movie.movieId, watchedDate: movie.watchedDate }]\r\n            });\r\n            let moviesWatched = []\r\n            newMovies.forEach(movie => {\r\n                let index = allMoviesData.data.findIndex(movieData => movieData._id == movie.movieId)\r\n                if (index !== -1) {\r\n                    moviesWatched = [...moviesWatched, {\r\n                        id: movie.movieId,\r\n                        movieName: allMoviesData.data[index].name,\r\n                        date: movie.watchedDate\r\n                    }]\r\n                }\r\n            })\r\n            setMoviesMemberWatched(moviesWatched)\r\n        }\r\n    }, [])\r\n\r\n    const subscribeWindow = () => {\r\n\r\n        setSubscribeToMovieClicked(!subscribeToMovieClicked)\r\n    }\r\n    let addMovieToSubscription;\r\n    let watchedMoviesListToRender;\r\n\r\n    if (subscribeToMovieClicked) {\r\n        addMovieToSubscription = <AddMovieToSubscriptionComp key={props.member._id} updateMoviesWathced={(data) => { setMoviesMemberWatched(data) }} moviesWatched={moviesMemberWatched} subscriptions={allSubscriptions} member={props.member} />\r\n    } else {\r\n        addMovieToSubscription = null\r\n    }\r\n\r\n\r\n    if (moviesMemberWatched) {\r\n        watchedMoviesListToRender = moviesMemberWatched.map((movie, i) => {\r\n            let watchedDate = new Date(movie.date)\r\n            return <li key={i}><Link style={{ color: \"unset\", textDecorationColor: \"#3EDBF0\", textDecorationThickness: \"3px\" }} to={`/main/movies/all/${movie.id}`}>{movie.movieName}</Link> , {watchedDate.toLocaleDateString(\"en-TT\")}</li>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div style={{ border: \"3px solid black\", width: \"400px\" }}>\r\n            <b>Movies Watched</b><br />\r\n            <input type=\"button\" value=\"Subscribe to new movie\" onClick={subscribeWindow} />\r\n            {addMovieToSubscription}\r\n            <ul>\r\n                {watchedMoviesListToRender}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default SubscribeToNewMovieComp","import react, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport MembersUtils from '../../MembersUtils/MembersUtils';\r\nimport SubscriptionsUtils from '../../SubscriptionsUtils/SubscriptionsUtils';\r\nimport SubscribeToNewMovieComp from './SubscribeToNewMovieComp';\r\n\r\n\r\nconst SubscriptionCardComp = (props) => {\r\n\r\n    const history = useHistory()\r\n    const [subscriptions, setSubscriptions] = useState([])\r\n    const [permissions, setPermissions] = useState(JSON.parse(sessionStorage.getItem(\"permissions\")).premissions)\r\n    const [member, setMember] = useState({})\r\n    useEffect(async () => {\r\n        let subscriptionsDB = await SubscriptionsUtils.getAllSubscriptions();\r\n        setSubscriptions(subscriptionsDB.data)\r\n        if (props.member != undefined) {\r\n            setMember(props.member)\r\n        } else if (props.match.params.id) {\r\n            let memberById = await MembersUtils.getMemberById(props.match.params.id)\r\n            setMember(memberById.data)\r\n        }\r\n    }, [])\r\n\r\n    let editButton;\r\n    let deleteButton;\r\n    if (permissions.includes(\"Update Subscriptions\")) {\r\n        editButton = <input type=\"button\" value=\"Edit\" onClick={() => {\r\n            history.push(`/main/subscriptions/edit/${member._id}`)\r\n            sessionStorage.setItem(\"member\", JSON.stringify(member));\r\n        }} />\r\n    }\r\n\r\n    if (permissions.includes(\"Delete Subscriptions\")) {\r\n        deleteButton = <input type=\"button\" value=\"Delete\" onClick={async () => {\r\n            let subscriptionById = subscriptions.filter(sub => sub.memberId == member._id)\r\n            await SubscriptionsUtils.deleteSubscription(subscriptionById[0]._id);\r\n            await MembersUtils.deleteMember(member._id)\r\n            if (props.member != undefined) {\r\n                props.deleteMember(member);\r\n            }\r\n            history.push(\"/main/subscriptions/all\")\r\n        }} />\r\n    }\r\n    let subscribeToNewMovie;\r\n    if (JSON.stringify(member) != \"{}\") {\r\n        subscribeToNewMovie = <SubscribeToNewMovieComp member={member} />\r\n    }\r\n    return (\r\n        <div style={{ border: \"3px solid black\", width: \"500px\" }}>\r\n            <h3>{member.name}</h3>\r\n            Email : {member.email}<br />\r\n            City : {member.city}<br />\r\n            {editButton}\r\n            {deleteButton}\r\n            {subscribeToNewMovie}\r\n            {/* <SubscribeToNewMovieComp member={member} /> */}\r\n        </div>\r\n    )\r\n}\r\nexport default SubscriptionCardComp","import react, { useContext, useEffect, useState } from 'react';\r\nimport MembersUtils from '../../MembersUtils/MembersUtils';\r\nimport SubscriptionsUtils from '../../SubscriptionsUtils/SubscriptionsUtils';\r\nimport { SubscriptionsContext } from './SubscriptionsContext';\r\nimport SubscriptionCardComp from './SubscriptionCardComp';\r\n\r\n\r\n\r\nconst AllSubscriptionsComp = (props) => {\r\n\r\n    const [members, setMembers] = useState([])\r\n    const [subscriptions, setSubscriptions] = useContext(SubscriptionsContext)\r\n    useEffect(async () => {\r\n        let allSubscriptionsData = await SubscriptionsUtils.getAllSubscriptions()\r\n        let membersFromDB = await MembersUtils.getMembersAllData();\r\n        setSubscriptions(allSubscriptionsData.data)\r\n        setMembers(membersFromDB.data)\r\n    }, [])\r\n    let membersThatSubscriptions = members.filter(member => {\r\n        let index = subscriptions.findIndex(sub => sub.memberId == member._id);\r\n        return (members[index])\r\n    })\r\n    let subscriptionsToRender\r\n    if (membersThatSubscriptions) {\r\n        subscriptionsToRender = membersThatSubscriptions.map(member => {\r\n            return <SubscriptionCardComp key={member._id} subscriptions={subscriptions} member={member} deleteMember={(data) => {\r\n                let allMembers = members\r\n                let i = allMembers.findIndex(member => member._id == data._id)\r\n                allMembers.splice(i, 1);\r\n                setMembers(allMembers)\r\n\r\n            }} />\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {subscriptionsToRender}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default AllSubscriptionsComp","import react, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport MembersUtils from '../../MembersUtils/MembersUtils';\r\nimport SubscriptionsUtils from '../../SubscriptionsUtils/SubscriptionsUtils';\r\n\r\n\r\n\r\nconst AddSubscriptionsComp = () => {\r\n\r\n    const history = useHistory()\r\n    const [memberName, setMemberName] = useState('');\r\n    const [memberEmail, setMemberEmail] = useState('');\r\n    const [memberCity, setMemberCity] = useState('')\r\n    const saveMember = async () => {\r\n        let memberToSave = {\r\n            name: memberName,\r\n            email: memberEmail,\r\n            city: memberCity\r\n        }\r\n        let newMember = await MembersUtils.addMember(memberToSave);\r\n        const memberDataId = newMember.data._id\r\n\r\n        let subscriptionToAdd = {\r\n            memberId: memberDataId,\r\n            movies: []\r\n        }\r\n        await SubscriptionsUtils.addSubscription(subscriptionToAdd)\r\n        history.push('/main/subscriptions/all')\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Add New Member</h3>\r\n            Name : <input type=\"text\" onChange={e => setMemberName(e.target.value)} /><br />\r\n            Email : <input type=\"text\" onChange={e => setMemberEmail(e.target.value)} /><br />\r\n            City : <input type=\"text\" onChange={e => setMemberCity(e.target.value)} /><br />\r\n            <input type=\"button\" value=\"Save\" onClick={saveMember} />\r\n            <input type=\"button\" value=\"Cancel\" onClick={() => { history.push('/main/subscriptions/all') }} />\r\n        </div>\r\n    )\r\n}\r\nexport default AddSubscriptionsComp","import react, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport MembersUtils from '../../MembersUtils/MembersUtils';\r\n\r\n\r\n\r\nconst EditSubscriptionsComp = (props) => {\r\n    const [member, setMember] = useState(JSON.parse(sessionStorage.getItem(\"member\")));\r\n    const history = useHistory()\r\n    const [memberName, setMemberName] = useState(member.name)\r\n    const [memberMail, setMemberMail] = useState(member.email)\r\n    const [memberCity, setMemberCity] = useState(member.city)\r\n\r\n\r\n    useEffect(async () => {\r\n\r\n    }, [])\r\n    const updateMember = async () => {\r\n        let memberToUpdate = {\r\n            name: memberName,\r\n            email: memberMail,\r\n            city: memberCity\r\n        }\r\n        await MembersUtils.updateMember(member._id, memberToUpdate)\r\n        sessionStorage.removeItem(\"member\")\r\n        history.push(\"/main/subscriptions/all\")\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Edit Member : {member.name}</h3>\r\n            Name : <input type=\"text\" value={memberName} onChange={e => setMemberName(e.target.value)} /> <br />\r\n            Email : <input type=\"text\" value={memberMail} onChange={e => setMemberMail(e.target.value)} /> <br />\r\n            City : <input type=\"text\" value={memberCity} onChange={e => setMemberCity(e.target.value)} /> <br />\r\n            <input type=\"button\" value=\"Update\" onClick={updateMember} />\r\n            <input type=\"button\" value=\"Cancel\" onClick={() => {\r\n                sessionStorage.removeItem(\"member\")\r\n                history.push(\"/main/subscriptions/all\")\r\n            }} />\r\n        </div>\r\n    )\r\n}\r\nexport default EditSubscriptionsComp","import react, { useEffect, useState } from 'react'\r\nimport { useHistory, Switch, Route } from 'react-router-dom'\r\nimport { SubscriptionsContextProvider } from './SubscriptionsContext';\r\nimport AllSubscriptionsComp from './AllSubscriptionsComp';\r\nimport AddSubscriptionsComp from './AddSubscriptionComp';\r\nimport EditSubscriptionsComp from './EditSubscriptionComp';\r\nimport SubscriptionCardComp from './SubscriptionCardComp';\r\nconst SubscriptionsRouteComp = () => {\r\n    const history = useHistory();\r\n    const [permissions, setPermissions] = useState(JSON.parse(sessionStorage.getItem(\"permissions\")).premissions)\r\n    let allYellowed;\r\n    let addYellowed;\r\n    if (history.location.pathname == \"/main/subscriptions/all\") {\r\n        allYellowed = \"#3EDBF0\"\r\n        addYellowed = null\r\n    } else if (history.location.pathname == \"/main/subscriptions/add\") {\r\n        allYellowed = null;\r\n        addYellowed = \"#3EDBF0\"\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ border: \"3px solid black\", width: \"750px\" }}>\r\n            <h2>Subscriptions</h2>\r\n            <input type=\"button\" style={{ backgroundColor: allYellowed }} value=\"All Members\" onClick={() => {\r\n                if (permissions.includes(\"View Subscriptions\")) { history.push('/main/subscriptions/all') } else {\r\n                    alert(\"You Dont Have The Right Permission\")\r\n                }\r\n            }} />\r\n            <input type=\"button\" style={{ backgroundColor: addYellowed }} value=\"Add Member\" onClick={() => {\r\n                if (permissions.includes(\"Create Subscriptions\")) { history.push('/main/subscriptions/add') } else {\r\n                    alert(\"You Dont Have The Right Permission\")\r\n                }\r\n            }} />\r\n            <Switch>\r\n                <SubscriptionsContextProvider>\r\n                    <Route exact path=\"/main/subscriptions/all\" component={AllSubscriptionsComp} />\r\n                    <Route path=\"/main/subscriptions/add\" component={AddSubscriptionsComp} />\r\n                    <Route path=\"/main/subscriptions/edit/:id\" component={EditSubscriptionsComp} />\r\n                    <Route path=\"/main/subscriptions/all/:id\" component={SubscriptionCardComp} />\r\n                </SubscriptionsContextProvider>\r\n            </Switch>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default SubscriptionsRouteComp","import { Switch, Route, Link, useHistory } from 'react-router-dom'\r\nimport react, { useEffect, useState } from 'react'\r\nimport usersDataUtils from '../../utils/usersDataUtils'\r\nimport premissionsUtils from '../../utils/premissionsUtils'\r\nimport UsersComp from '../UsersManagementPhase/UsersComp'\r\nimport MoviesComp from '../MoviesPhase/MoviesComp'\r\nimport SubscriptionsComp from '../SubscriptionsPhase/SubscriptionsRouteComp'\r\nimport EditUserComp from '../UsersManagementPhase/EditUserComp'\r\nconst MainComp = (props) => {\r\n\r\n    const history = useHistory()\r\n    const [session, setSession] = useState('')\r\n    const [userId, setUserId] = useState(sessionStorage.getItem(\"userId\"))\r\n    const [userName, setUserName] = useState(sessionStorage.getItem('userName'))\r\n    const [usersData, setUsersData] = useState([])\r\n    const [premissions, setPremissions] = useState([])\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [moviesClicked, setMoviesClicked] = useState(false)\r\n    const [subscriptionsClicked, setSubscriptionsClicked] = useState(false);\r\n    const [usersManClicked, setUsersManClicked] = useState(false)\r\n    useEffect(async () => {\r\n        let users = await usersDataUtils.getUsersData();\r\n        setUsersData(users.data)\r\n        let permissions = await premissionsUtils.getAllPremissions();\r\n        setPremissions(permissions.data)\r\n\r\n        if (userName == \"Admin\") {\r\n            setIsAdmin(true)\r\n        } else {\r\n            setIsAdmin(false)\r\n        }\r\n        let sessionTime = sessionStorage.getItem('sessionTimeOut')\r\n        let logOutTimer = setTimeout(() => {\r\n            sessionStorage.removeItem(\"userName\")\r\n            sessionStorage.removeItem(\"permissions\")\r\n            sessionStorage.removeItem(\"userId\")\r\n            sessionStorage.removeItem(\"movie\")\r\n            sessionStorage.removeItem(\"movieName\")\r\n            sessionStorage.removeItem(\"member\")\r\n            sessionStorage.removeItem('sessionTimeOut')\r\n            props.history.push('/')\r\n            alert(\"Your Time In The System Expired\")\r\n        }, sessionTime * 60000);\r\n        setSession(logOutTimer)\r\n    }, [])\r\n    const allMovies = () => {\r\n        let index = premissions.findIndex(prem => prem.id == userId)\r\n        if (premissions[index].premissions.includes(\"View Movies\")) {\r\n            props.history.push(`/main/movies/all`)\r\n            setMoviesClicked(true)\r\n            setUsersManClicked(false)\r\n            setSubscriptionsClicked(false)\r\n        } else {\r\n            alert(\"You Dont Have The Right Permission To See Movies\")\r\n        }\r\n    }\r\n    let movYellowed;\r\n    let SubsYellowed;\r\n    let usersManYellowed;\r\n    if (moviesClicked || history.location.pathname == \"/main/movies/all\" || history.location.pathname == \"/main/movies/add\" || history.location.pathname == \"/main/movies/edit\") {\r\n        movYellowed = \"#3EDBF0\";\r\n        SubsYellowed = null;\r\n        usersManYellowed = null\r\n    } else if (subscriptionsClicked || history.location.pathname == \"/main/subscriptions/all\" || history.location.pathname == \"/main/subscriptions/add\" || history.location.pathname == \"/main/subscriptions/edit\") {\r\n        movYellowed = null;\r\n        SubsYellowed = \"#3EDBF0\";\r\n        usersManYellowed = null\r\n    } else if (usersManClicked) {\r\n        movYellowed = null;\r\n        SubsYellowed = null;\r\n        usersManYellowed = \"#3EDBF0\"\r\n    }\r\n    let usersManagementButton;\r\n    if (isAdmin) {\r\n        usersManagementButton = <input style={{ backgroundColor: usersManYellowed }} type=\"button\" value=\"Users Management\" onClick={() => {\r\n            props.history.push('/main/users/all')\r\n            setMoviesClicked(false)\r\n            setUsersManClicked(true)\r\n            setSubscriptionsClicked(false)\r\n        }} />\r\n    } else {\r\n        usersManagementButton = null\r\n    }\r\n    let permissionsById = premissions.filter(prem => prem.id == userId)\r\n    sessionStorage.setItem(\"permissions\", JSON.stringify(permissionsById[0]))\r\n    return (\r\n        <div>\r\n            <h4>Hello {userName} </h4>\r\n            <input style={{ backgroundColor: movYellowed }} type=\"button\" value=\"Movies\" onClick={allMovies} />\r\n            <input style={{ backgroundColor: SubsYellowed }} type=\"button\" value=\"Subscriptions\" onClick={() => {\r\n                props.history.push(`/main/subscriptions/all`)\r\n                setMoviesClicked(false)\r\n                setUsersManClicked(false)\r\n                setSubscriptionsClicked(true)\r\n            }} />\r\n            {usersManagementButton}\r\n            <input type=\"button\" value=\"Log Out\" onClick={() => {\r\n                props.history.push('/'); sessionStorage.removeItem(\"userName\")\r\n                sessionStorage.removeItem(\"permissions\")\r\n                sessionStorage.removeItem(\"userId\")\r\n                sessionStorage.removeItem(\"member\")\r\n                sessionStorage.removeItem(\"movieName\")\r\n                sessionStorage.removeItem(\"movie\")\r\n                sessionStorage.removeItem(\"sessionTimeOut\")\r\n                clearTimeout(session)\r\n            }} /> <br />\r\n            <Switch>\r\n                <Route path=\"/main/users/\" component={UsersComp} />\r\n                <Route path=\"/main/movies/\" component={MoviesComp} />\r\n                <Route path=\"/main/subscriptions\" component={SubscriptionsComp} />\r\n            </Switch>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default MainComp","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport LoginComp from './Login'\r\nimport CreateAcc from './CreateAccount'\r\nimport MainComp from '../MainPhase/MainPage'\r\nconst PlaceHolderComp = () => {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1 style={{ borderBottom: \"4px solid white\", width: \"472px\" }}> Movies - Subsciptions Web Site</h1>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={LoginComp} />\r\n                <Route path=\"/createAcc\" component={CreateAcc} />\r\n                <Route path=\"/main\" component={MainComp} />\r\n            </Switch>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default PlaceHolderComp","import './App.css';\nimport PlaceHolderComp from './cinemaSystem/Components/EnterSystemPhase/PlaceHolder';\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <PlaceHolderComp />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}